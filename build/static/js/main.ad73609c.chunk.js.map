{"version":3,"sources":["utils/convertData.js","utils/filterChannels.js","utils/filterCampaigns.js","styled-components/Input/Input.js","styled-components/Form/Form.js","styled-components/Wrapper/Wrapper.js","styled-components/Text/Text.js","styled-components/List/List.js","styled-components/Button/Button.js","components/FindAsYouType/FindAsYouType.js","App.js","serviceWorker.js","index.js"],"names":["convertData","data","convertedData","uniqueCampaigns","channels","forEach","item","index","itemArr","split","clicks","parseInt","impressions","indexPos","indexOf","push","campaign","channel","hasOwnProperty","filterChannels","_ref","currentInputVal","currentInputValLowerCase","toLowerCase","length","Object","keys","key","filterCampaigns","campaigns","Input","styled","input","_templateObject","Form","form","Form_templateObject","Wrapper","div","Wrapper_templateObject","Text","p","Text_templateObject","List","ul","List_templateObject","ListItem","li","_templateObject2","Button","button","Button_templateObject","FindAsYouType","React","memo","props","console","log","react_default","a","createElement","map","type","onClick","clickedCampaign","clickedChannel","prevProps","nextProps","campaignsHaveChanged","channelsHaveChanged","App","_useState","useState","_useState2","slicedToArray","setData","_useState3","_useState4","filteredChannels","setFilteredChannels","_useState5","_useState6","filteredCampaigns","setFilteredCampaigns","_useState7","_useState8","inputValue","setInputValue","_useState9","_useState10","showList","setShowList","_useState11","_useState12","setClicks","_useState13","_useState14","setImpressions","inputRef","useRef","useEffect","current","focus","axios","get","then","response","catch","error","setChannelOrCampaign","value","onSubmit","e","preventDefault","ref","onChange","target","newFilteredCampaigns","newFilteredChannels","FindAsYouType_FindAsYouType","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gMA8CeA,EA9CK,SAACC,GACnB,IAAMC,EAAgB,GAChBC,EAAkB,GAClBC,EAAW,GAqCjB,OAnCAH,EAAKI,QAAS,SAACC,EAAKC,GAClB,IAAMC,EAAUF,EAAKG,MAAM,KAE3B,GAAIF,EAAQ,EAAG,CACb,IAAMG,EAASC,SAASH,EAAQ,IAC1BI,EAAcD,SAASH,EAAQ,IAC/BK,EAAWV,EAAgBW,QAAQN,EAAQ,KAE/B,IAAdK,GACFV,EAAgBY,KAAKP,EAAQ,IAE7BN,EAAca,KAAK,CACjBC,SAAUR,EAAQ,GAClBS,QAAST,EAAQ,GACjBE,SACAE,kBAGFV,EAAcW,GAAUH,QAAUA,EAClCR,EAAcW,GAAUD,aAAeA,GAGpCR,EAASc,eAAeV,EAAQ,MACnCJ,EAASI,EAAQ,IAAM,CACrBE,OAAQ,EACRE,YAAa,IAIjBR,EAASI,EAAQ,IAAIE,QAAUA,EAC/BN,EAASI,EAAQ,IAAII,aAAeA,KAKjC,CACLV,gBACAE,aC5BWe,EAdQ,SAAAC,GAA6B,IAA3BnB,EAA2BmB,EAA3BnB,KAAMoB,EAAqBD,EAArBC,gBACvBjB,EAAW,GACXkB,EAA2BD,EAAgBE,cASjD,OAPID,EAAyBE,OAAS,GACpCC,OAAOC,KAAKzB,EAAKG,UAAUC,QAAQ,SAAAsB,GAC7BA,EAAIJ,cAAcT,QAAQQ,IAA6B,GACzDlB,EAASW,KAAKY,KAIbvB,GCGMwB,EAdS,SAAAR,GAA6B,IAA3BnB,EAA2BmB,EAA3BnB,KAAMoB,EAAqBD,EAArBC,gBACxBQ,EAAY,GACZP,EAA2BD,EAAgBE,cASjD,OAPID,EAAyBE,OAAS,GACpCvB,EAAKC,cAAcG,QAAQ,SAAAC,GACrBA,EAAKU,SAASO,cAAcT,QAAQQ,IAA6B,GACnEO,EAAUd,KAAKT,KAIduB,yNCTF,IAAMC,EAAQC,IAAOC,MAAVC,mHCAX,IAAMC,EAAOH,IAAOI,KAAVC,iKCAV,IAAMC,EAAUN,IAAOO,IAAVC,4HCAb,IAAMC,EAAOT,IAAOU,EAAVC,oYCAV,IAAMC,EAAOZ,IAAOa,GAAVC,KAaJC,EAAWf,IAAOgB,GAAVC,wOCbd,IAAMC,EAASlB,IAAOmB,OAAVC,KCyDJC,EAzBOC,IAAMC,KAAK,SAAAC,GAE/B,OADAC,QAAQC,IAAI,eAEVC,EAAAC,EAAAC,cAACjB,EAAD,KAEIY,EAAM1B,UAAUL,OAAS,EAAI+B,EAAM1B,UAAUgC,IAAI,SAACvD,EAAKC,GACrD,OACAmD,EAAAC,EAAAC,cAACd,EAAD,CAAUnB,IAAK,YAAcpB,GAC3BmD,EAAAC,EAAAC,cAACX,EAAD,CAAQa,KAAK,SAASC,QAAS,kBAAMR,EAAMS,gBAAgBzD,KAAUD,EAAKU,aAGzE,KAGLuC,EAAMnD,SAASoB,OAAS,EAAI+B,EAAMnD,SAASyD,IAAI,SAACvD,EAAKC,GACnD,OACAmD,EAAAC,EAAAC,cAACd,EAAD,CAAUnB,IAAK,UAAYpB,GACzBmD,EAAAC,EAAAC,cAACX,EAAD,CAAQa,KAAK,SAASC,QAAS,kBAAMR,EAAMU,eAAe1D,KAAUD,MAEnE,OAjDG,SAAC4D,EAAWC,GAE1B,IAAIC,GAAuB,EACvBC,GAAsB,EAE1B,OAAIH,EAAUrC,UAAUL,SAAW2C,EAAUtC,UAAUL,QACnD0C,EAAU9D,SAASoB,SAAW2C,EAAU/D,SAASoB,SAIrD0C,EAAUrC,UAAUxB,QAAQ,SAACW,EAAST,GAChCS,EAASA,WAAamD,EAAUtC,UAAUtB,GAAOS,WACnDoD,GAAuB,KAI3BF,EAAU9D,SAASC,QAAQ,SAACY,EAAQV,GAC9BU,IAAYkD,EAAU/D,SAASG,KACjC8D,GAAsB,MAIrBA,IAAwBD,KCuEhBE,EAtFH,WAAM,IAAAC,EACQC,mBAAS,IADjBC,EAAAhD,OAAAiD,EAAA,EAAAjD,CAAA8C,EAAA,GACTtE,EADSwE,EAAA,GACHE,EADGF,EAAA,GAAAG,EAEgCJ,mBAAS,IAFzCK,EAAApD,OAAAiD,EAAA,EAAAjD,CAAAmD,EAAA,GAETE,EAFSD,EAAA,GAESE,EAFTF,EAAA,GAAAG,EAGkCR,mBAAS,IAH3CS,EAAAxD,OAAAiD,EAAA,EAAAjD,CAAAuD,EAAA,GAGTE,EAHSD,EAAA,GAGUE,EAHVF,EAAA,GAAAG,EAIoBZ,mBAAS,IAJ7Ba,EAAA5D,OAAAiD,EAAA,EAAAjD,CAAA2D,EAAA,GAITE,EAJSD,EAAA,GAIGE,EAJHF,EAAA,GAAAG,EAKgBhB,oBAAS,GALzBiB,EAAAhE,OAAAiD,EAAA,EAAAjD,CAAA+D,EAAA,GAKTE,EALSD,EAAA,GAKCE,EALDF,EAAA,GAAAG,EAMYpB,mBAAS,GANrBqB,EAAApE,OAAAiD,EAAA,EAAAjD,CAAAmE,EAAA,GAMTlF,EANSmF,EAAA,GAMDC,EANCD,EAAA,GAAAE,EAOsBvB,mBAAS,GAP/BwB,EAAAvE,OAAAiD,EAAA,EAAAjD,CAAAsE,EAAA,GAOTnF,EAPSoF,EAAA,GAOIC,EAPJD,EAAA,GASVE,EAAWC,mBAGjBC,oBAAU,WACRF,EAASG,QAAQC,QACjBC,IAAMC,IAAI,oDAAoDC,KAAK,SAAAC,GACjE/B,EAAQ3E,EAAY0G,EAASzG,KAAKQ,MAAM,UACvCkG,MAAM,SAAAC,GACPpD,QAAQC,IAAI,YAEb,IAEH,IAsBMoD,EAAuB,SAAAzF,GAAoC,IAAjC0F,EAAiC1F,EAAjC0F,MAAOpG,EAA0BU,EAA1BV,OAAQE,EAAkBQ,EAAlBR,YAC7CkF,EAAUpF,GACVuF,EAAerF,GACf2E,EAAcuB,GACdnB,GAAY,IAqBd,OACEjC,EAAAC,EAAAC,cAACvB,EAAD,KACEqB,EAAAC,EAAAC,cAACpB,EAAD,oCACAkB,EAAAC,EAAAC,cAAC1B,EAAD,CAAM6E,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBACvBvD,EAAAC,EAAAC,cAAC9B,EAAD,CAAOoF,IAAKhB,EAAUpC,KAAK,OAAOgD,MAAOxB,EAAY6B,SAnDnC,SAACH,GACvB,IAAM3F,EAAkB2F,EAAEI,OAAON,MACjCvB,EAAclE,GAEd,IAAMgG,EAAuBhG,EAAgBG,OAC3CI,EAAgB,CAAE3B,OAAMoB,oBAAqB,GAEzCiG,EAAsBjG,EAAgBG,OAC1CL,EAAe,CAAElB,OAAMoB,oBAAqB,IAEf,IAA3BA,EAAgBG,QACe,IAAhC6F,EAAqB7F,QAA+C,IAA/B8F,EAAoB9F,UACxDsE,EAAU,GACVG,EAAe,IAGnBd,EAAqBkC,GACrBtC,EAAoBuC,GACpB3B,EAAY0B,EAAqB7F,OAAS,GAAK8F,EAAoB9F,OAAS,MAkCxEkC,EAAAC,EAAAC,cAACpB,EAAD,gBAAgB9B,EAAhB,iBAAwCE,GACtC8E,EAAWhC,EAAAC,EAAAC,cAAC2D,EAAD,CACX1F,UAAWqD,EACX9E,SAAU0E,EACVd,gBA3BgB,SAACzD,GACvB,IAAMS,EAAWkE,EAAkB3E,GACnCsG,EAAqB,CACnBC,MAAO9F,EAASA,SAChBN,OAAQM,EAASN,OACjBE,YAAaI,EAASJ,eAuBlBqD,eAnBe,SAAC1D,GACtB,IAAMU,EAAUhB,EAAKG,SAAS0E,EAAiBvE,IAC/CsG,EAAqB,CACnBC,MAAOhC,EAAiBvE,GACxBG,OAAQO,EAAQP,OAChBE,YAAaK,EAAQL,iBAed,QC9EO4G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.ad73609c.chunk.js","sourcesContent":["const convertData = (data) => {\n  const convertedData = [];\n  const uniqueCampaigns = [];\n  const channels = {};\n\n  data.forEach( (item,index) => {\n    const itemArr = item.split(',');\n    // Skip first item\n    if (index > 0) {\n      const clicks = parseInt(itemArr[2]);\n      const impressions = parseInt(itemArr[3]);\n      const indexPos = uniqueCampaigns.indexOf(itemArr[0]);\n      \n      if (indexPos === -1) {\n        uniqueCampaigns.push(itemArr[0]);\n      \n        convertedData.push({\n          campaign: itemArr[0],\n          channel: itemArr[1],\n          clicks,\n          impressions\n        });\n      } else {\n        convertedData[indexPos].clicks += clicks;\n        convertedData[indexPos].impressions += impressions; \n      }\n      \n      if (!channels.hasOwnProperty(itemArr[1])) {\n        channels[itemArr[1]] = {\n          clicks: 0,\n          impressions: 0\n        }\n      }\n\n      channels[itemArr[1]].clicks += clicks;\n      channels[itemArr[1]].impressions += impressions;\n\n    }\n  });\n\n  return {\n    convertedData,\n    channels\n  };\n};\n\nexport default convertData;","const filterChannels = ({data, currentInputVal}) => {\n  const channels = [];\n  const currentInputValLowerCase = currentInputVal.toLowerCase();\n  \n  if (currentInputValLowerCase.length > 0) {\n    Object.keys(data.channels).forEach(key => {\n      if (key.toLowerCase().indexOf(currentInputValLowerCase) > -1) {\n        channels.push(key);\n      }\n    });\n  }\n  return channels;\n};\n\nexport default filterChannels;","const filterCampaigns = ({data, currentInputVal}) => {\n  const campaigns = [];\n  const currentInputValLowerCase = currentInputVal.toLowerCase();\n  \n  if (currentInputValLowerCase.length > 0) {\n    data.convertedData.forEach(item => {\n      if (item.campaign.toLowerCase().indexOf(currentInputValLowerCase) > -1) {\n        campaigns.push(item)\n      }\n    });\n  }\n  return campaigns;\n};\n\nexport default filterCampaigns;","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  background: none;\n  border: 1px solid #333;\n  padding: 10px;\n  font-size: 16px;\n  width: 100%;\n  box-sizing: border-box;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  position: relative;\n`;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding-top: 50px;\n  max-width: 300px;\n  margin: 0 auto;\n`;","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-family: sans-serif;\n`;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 45px;\n  background: none;\n  border: 1px solid #333;\n  padding: 10px;\n  font-size: 16px;\n  width: 100%;\n  list-style: none;\n  margin: 0;\n  background: #fff;\n  box-sizing: border-box;\n`;\nexport const ListItem = styled.li`\n  display: block;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 5px;\n  background: lightblue;\n  color: #333;\n  border: 0;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 10px;\n`;","import React from 'react';\nimport { List, ListItem } from '../../styled-components/List/List';\nimport { Button } from '../../styled-components/Button/Button';\n\nconst isEqual = (prevProps, nextProps) => {\n  // rerender list if items have changed\n  let campaignsHaveChanged = false;\n  let channelsHaveChanged = false;\n  \n  if (prevProps.campaigns.length !== nextProps.campaigns.length ||\n      prevProps.channels.length !== nextProps.channels.length ) {\n        return false;\n  }\n\n  prevProps.campaigns.forEach((campaign,index) => {\n    if (campaign.campaign !== nextProps.campaigns[index].campaign) {\n      campaignsHaveChanged = true;\n    }\n  });\n\n  prevProps.channels.forEach((channel,index) => {\n    if (channel !== nextProps.channels[index]) {\n      channelsHaveChanged = true;\n    }\n  });\n\n  if (!channelsHaveChanged && !campaignsHaveChanged) {\n    return true;\n  } else {\n    return false;\n  }\n\n} \n\nconst FindAsYouType = React.memo(props => {\n  console.log('Render List')\n  return (\n    <List>\n      {\n        props.campaigns.length > 0 ? props.campaigns.map((item,index) => {\n          return (\n          <ListItem key={'campaigns' + index}>\n            <Button type=\"Button\" onClick={() => props.clickedCampaign(index)}>{ item.campaign }</Button>\n          </ListItem>\n          )\n        }) : null\n      }\n      {\n        props.channels.length > 0 ? props.channels.map((item,index) => {\n          return (\n          <ListItem key={'channel' + index}>\n            <Button type=\"Button\" onClick={() => props.clickedChannel(index)}>{ item }</Button>\n          </ListItem>)\n        }) : null\n      }\n    </List>\n  )\n}, isEqual);\n\nexport default FindAsYouType;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport convertData from './utils/convertData';\nimport filterChannels from './utils/filterChannels';\nimport filterCampaigns from './utils/filterCampaigns';\nimport { Input } from './styled-components/Input/Input';\nimport { Form } from './styled-components/Form/Form';\nimport { Wrapper } from './styled-components/Wrapper/Wrapper';\nimport { Text } from './styled-components/Text/Text';\nimport FindAsYouType from './components/FindAsYouType/FindAsYouType';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [filteredChannels, setFilteredChannels] = useState([]);\n  const [filteredCampaigns, setFilteredCampaigns] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [showList, setShowList] = useState(false);\n  const [clicks, setClicks] = useState(0);\n  const [impressions, setImpressions] = useState(0);\n \n  const inputRef = useRef();\n\n  // Did mount\n  useEffect(() => {\n    inputRef.current.focus();\n    axios.get('https://www.mocky.io/v2/5cd93aeb300000b721c014b0').then(response => {\n      setData(convertData(response.data.split('\\n')));\n    }).catch(error => {\n      console.log('error');\n    });\n  }, []);\n\n  const filterAggregate = (e) => {\n    const currentInputVal = e.target.value;\n    setInputValue(currentInputVal);\n  \n    const newFilteredCampaigns = currentInputVal.length ? \n      filterCampaigns({ data, currentInputVal }) : [];\n\n    const newFilteredChannels = currentInputVal.length ?\n      filterChannels({ data, currentInputVal }) : [];\n\n    if (currentInputVal.length === 0 || \n      (newFilteredCampaigns.length === 0 && newFilteredChannels.length === 0) ) { \n        setClicks(0);\n        setImpressions(0); \n    }\n\n    setFilteredCampaigns(newFilteredCampaigns);\n    setFilteredChannels(newFilteredChannels);\n    setShowList(newFilteredCampaigns.length > 0 || newFilteredChannels.length > 0);\n\n  };\n\n  const setChannelOrCampaign = ({ value, clicks, impressions }) => {\n    setClicks(clicks);\n    setImpressions(impressions);\n    setInputValue(value);\n    setShowList(false);\n  }\n\n  const clickedCampaign = (index) => {\n    const campaign = filteredCampaigns[index];\n    setChannelOrCampaign({\n      value: campaign.campaign,\n      clicks: campaign.clicks,\n      impressions: campaign.impressions \n    });\n  };\n\n  const clickedChannel = (index) => {\n    const channel = data.channels[filteredChannels[index]];\n    setChannelOrCampaign({\n      value: filteredChannels[index],\n      clicks: channel.clicks,\n      impressions: channel.impressions\n    });\n  };\n  \n  return (\n    <Wrapper>\n      <Text>Choose channel or campaign:</Text>\n      <Form onSubmit={(e) => e.preventDefault() }>\n        <Input ref={inputRef} type=\"text\" value={inputValue} onChange={filterAggregate}  />\n        <Text>Clicks: { clicks } Impressions: { impressions }</Text>\n        { showList ? <FindAsYouType \n          campaigns={filteredCampaigns} \n          channels={filteredChannels}\n          clickedCampaign={clickedCampaign}\n          clickedChannel={clickedChannel} \n        /> : null }\n      </Form>\n    </Wrapper>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}